{"ast":null,"code":"import { state, style, trigger, transition, animate, keyframes } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./animation.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction AnimationComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"h1\");\n    i0.ɵɵtext(2, \" An Error Occurred!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\n\nfunction AnimationComponent_li_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵlistener(\"click\", function AnimationComponent_li_23_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r3 = restoredCtx.$implicit;\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.deleteItem(item_r3, i_r4);\n    });\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"@stateOfList1\", undefined);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"id: \", item_r3.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"title: \", item_r3.title, \"\");\n  }\n}\n\nexport let AnimationComponent = /*#__PURE__*/(() => {\n  class AnimationComponent {\n    constructor(animationService) {\n      this.animationService = animationService;\n      this.state = 'normal';\n      this.wildState = 'normal';\n      this.list = [];\n    }\n\n    ngOnInit() {\n      // this.errorSub = this.animationService.error.subscribe((errorMessage) => {\n      //   this.error = errorMessage;\n      // });\n      // this.itemSub = this.animationService.itemListenerSubject.subscribe(\n      //   (item) => {\n      //     this.list.push(new PostModel(item));\n      //   }\n      // );\n      this.getItems();\n    }\n\n    ngOnDestroy() {\n      var _a, _b, _c;\n\n      (_a = this.errorSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n      (_b = this.itemSub) === null || _b === void 0 ? void 0 : _b.unsubscribe();\n      (_c = this.removeItemSub) === null || _c === void 0 ? void 0 : _c.unsubscribe();\n    }\n\n    getItems() {\n      this.animationService.onClickGetItems();\n    }\n\n    addItem(item) {\n      this.animationService.addItem(item);\n    }\n\n    deleteItem(item, i) {\n      if (item.id) {\n        this.animationService.deleteItem(item);\n      }\n    }\n\n    onAnimate() {\n      this.state = this.state === 'normal' ? 'highlighted' : 'normal';\n      this.wildState = this.wildState === 'normal' ? 'highlighted' : 'normal'; // console.warn(this.state);\n      // console.warn(this.wildState);\n    }\n\n    onShrink() {\n      this.wildState = 'shrunken';\n    }\n\n    animationStarted(event) {\n      console.log(event);\n    }\n\n    animationEnded(event) {\n      console.log(event);\n    }\n\n  }\n\n  AnimationComponent.ɵfac = function AnimationComponent_Factory(t) {\n    return new (t || AnimationComponent)(i0.ɵɵdirectiveInject(i1.AnimationService));\n  };\n\n  AnimationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AnimationComponent,\n    selectors: [[\"app-animation\"]],\n    decls: 24,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [2, \"width\", \"100px\", \"height\", \"100px\"], [\"type\", \"text\"], [\"input\", \"\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert\", \"alert-danger\"], [1, \"list-group-item\", 3, \"click\"]],\n    template: function AnimationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\");\n        i0.ɵɵtext(4, \"Animations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AnimationComponent_Template_button_click_5_listener() {\n          return ctx.onAnimate();\n        });\n        i0.ɵɵtext(6, \"Animate!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AnimationComponent_Template_button_click_7_listener() {\n          return ctx.onShrink();\n        });\n        i0.ɵɵtext(8, \"Shrink!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"hr\");\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵlistener(\"@divState.start\", function AnimationComponent_Template_div_animation_divState_start_10_listener($event) {\n          return ctx.animationStarted($event);\n        })(\"@divState.done\", function AnimationComponent_Template_div_animation_divState_done_10_listener($event) {\n          return ctx.animationEnded($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"br\")(12, \"div\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(13, \"hr\");\n        i0.ɵɵelementStart(14, \"div\", 1)(15, \"div\", 2);\n        i0.ɵɵelement(16, \"input\", 5, 6);\n        i0.ɵɵelementStart(18, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AnimationComponent_Template_button_click_18_listener() {\n          i0.ɵɵrestoreView(_r7);\n\n          const _r0 = i0.ɵɵreference(17);\n\n          return ctx.addItem(_r0.value);\n        });\n        i0.ɵɵtext(19, \"Add Item!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"hr\");\n        i0.ɵɵtemplate(21, AnimationComponent_div_21_Template, 5, 1, \"div\", 7);\n        i0.ɵɵelementStart(22, \"ul\", 8);\n        i0.ɵɵtemplate(23, AnimationComponent_li_23_Template, 5, 3, \"li\", 9);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"@divState\", ctx.state);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"@wildState\", ctx.wildState);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.list);\n      }\n    },\n    directives: [i2.NgIf, i2.NgForOf],\n    styles: [\".container[_ngcontent-%COMP%]{height:100vh;overflow:auto}\"],\n    data: {\n      animation: [trigger('divState', [state('normal', style({\n        'background-color': 'red',\n        transform: 'translateX(0)'\n      })), state('highlighted', style({\n        'background-color': 'blue',\n        transform: 'translateX(100px)'\n      })), transition('normal <=> highlighted', animate(300))]), trigger('wildState', [state('normal', style({\n        'background-color': 'red',\n        transform: 'translateX(0) scale(1)'\n      })), state('highlighted', style({\n        'background-color': 'blue',\n        transform: 'translateX(100px) scale(1)'\n      })), state('shrunken', style({\n        'background-color': 'green',\n        transform: 'translateX(0) scale(0.5)'\n      })), transition('normal => highlighted', animate(800)), transition('highlighted => normal', animate(500)), transition('* => shrunken', [animate(1000, style({\n        backgroundColor: 'blue',\n        borderRadius: '20px',\n        transform: 'scale(0.75)'\n      }))]), transition('shrunken => *', [animate(1000, style({\n        backgroundColor: 'blue',\n        borderRadius: '20px',\n        transform: 'scale(0.75)'\n      }))])]), trigger('stateOfList1', [transition('void => *', [style({\n        opacity: 0,\n        transform: 'translateX(-100px)'\n      }), animate(600)]), transition('* => void', [animate(300, style({\n        transform: 'translateX(100px)',\n        opacity: 0\n      }))])]), trigger('stateOfList2', [transition('void => *', [animate(600, keyframes([style({\n        transform: 'translateX(-100px)',\n        opacity: 0,\n        offset: 0\n      }), style({\n        transform: 'translateX(-50px)',\n        opacity: 0.5,\n        offset: 0.5\n      }), style({\n        transform: 'translateX(0px)',\n        opacity: 1,\n        offset: 1\n      })]))])])]\n    }\n  });\n  return AnimationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}