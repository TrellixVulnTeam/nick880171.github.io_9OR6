{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HttpService = /*#__PURE__*/(() => {\n  class HttpService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'http://localhost:3000';\n      this.authToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImpqNzg3ODc4IiwiaWF0IjoxNjQ5NTA1MDEzLCJleHAiOjE2NDk1MDg2MTN9.OfVR1yg_5QDdnRKzRR3S8geYsMzCmdBGXyywrqssFtQ';\n    }\n\n    createHttpHeaders(authToken) {\n      const result = new HttpHeaders({\n        Authorization: `Bearer ${authToken}`\n      });\n      return result;\n    }\n\n    postHttpMethod(url, body) {\n      const headers = this.createHttpHeaders(this.authToken);\n      const encodeUrl = encodeURI(this.baseUrl + url);\n      return this.http.post(encodeUrl, body, {\n        headers,\n        observe: 'body'\n      });\n    }\n\n    getHttpMethod(url, httpParam) {\n      const headers = this.createHttpHeaders(this.authToken);\n      const encodeUrl = encodeURI(this.baseUrl + url);\n      return this.http.get(encodeUrl, {\n        headers,\n        observe: 'body',\n        params: httpParam\n      });\n    }\n\n    deleteHttpMethod(url, httpParam) {\n      const headers = this.createHttpHeaders(this.authToken);\n      const encodeUrl = encodeURI(this.baseUrl + url);\n      return this.http.delete(encodeUrl, {\n        headers,\n        observe: 'body',\n        params: httpParam\n      });\n    }\n\n  }\n\n  HttpService.ɵfac = function HttpService_Factory(t) {\n    return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  HttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpService,\n    factory: HttpService.ɵfac,\n    providedIn: 'root'\n  });\n  return HttpService;\n})();","map":null,"metadata":{},"sourceType":"module"}