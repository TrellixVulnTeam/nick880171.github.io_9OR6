{"ast":null,"code":"/*!\n * @pixi/polyfill - v6.3.0\n * Compiled Wed, 23 Mar 2022 18:58:56 UTC\n *\n * @pixi/polyfill is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport Polyfill from 'promise-polyfill';\nimport objectAssign from 'object-assign';\n\nif (typeof globalThis === 'undefined') {\n  if (typeof self !== 'undefined') {\n    // covers browsers\n    // @ts-expect-error not-writable ts(2540) error only on node\n    self.globalThis = self;\n  } else if (typeof global !== 'undefined') {\n    // covers versions of Node < 12\n    // @ts-expect-error not-writable ts(2540) error only on node\n    global.globalThis = global;\n  }\n} // Support for IE 9 - 11 which does not include Promises\n\n\nif (!globalThis.Promise) {\n  globalThis.Promise = Polyfill;\n} // References:\n\n\nif (!Object.assign) {\n  Object.assign = objectAssign;\n} // References:\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// https://gist.github.com/1579671\n// http://updates.html5rocks.com/2012/05/requestAnimationFrame-API-now-with-sub-millisecond-precision\n// https://gist.github.com/timhall/4078614\n// https://github.com/Financial-Times/polyfill-service/tree/master/polyfills/requestAnimationFrame\n// Expected to be used with Browserfiy\n// Browserify automatically detects the use of `global` and passes the\n// correct reference of `global`, `globalThis`, and finally `window`\n\n\nvar ONE_FRAME_TIME = 16; // Date.now\n\nif (!(Date.now && Date.prototype.getTime)) {\n  Date.now = function now() {\n    return new Date().getTime();\n  };\n} // performance.now\n\n\nif (!(globalThis.performance && globalThis.performance.now)) {\n  var startTime_1 = Date.now();\n\n  if (!globalThis.performance) {\n    globalThis.performance = {};\n  }\n\n  globalThis.performance.now = function () {\n    return Date.now() - startTime_1;\n  };\n} // requestAnimationFrame\n\n\nvar lastTime = Date.now();\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\nfor (var x = 0; x < vendors.length && !globalThis.requestAnimationFrame; ++x) {\n  var p = vendors[x];\n  globalThis.requestAnimationFrame = globalThis[p + \"RequestAnimationFrame\"];\n  globalThis.cancelAnimationFrame = globalThis[p + \"CancelAnimationFrame\"] || globalThis[p + \"CancelRequestAnimationFrame\"];\n}\n\nif (!globalThis.requestAnimationFrame) {\n  globalThis.requestAnimationFrame = function (callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError(callback + \"is not a function\");\n    }\n\n    var currentTime = Date.now();\n    var delay = ONE_FRAME_TIME + lastTime - currentTime;\n\n    if (delay < 0) {\n      delay = 0;\n    }\n\n    lastTime = currentTime;\n    return globalThis.self.setTimeout(function () {\n      lastTime = Date.now();\n      callback(performance.now());\n    }, delay);\n  };\n}\n\nif (!globalThis.cancelAnimationFrame) {\n  globalThis.cancelAnimationFrame = function (id) {\n    return clearTimeout(id);\n  };\n} // References:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\nif (!Math.sign) {\n  Math.sign = function mathSign(x) {\n    x = Number(x);\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n} // References:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\nif (!Number.isInteger) {\n  Number.isInteger = function numberIsInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n  };\n}\n\nif (!globalThis.ArrayBuffer) {\n  globalThis.ArrayBuffer = Array;\n}\n\nif (!globalThis.Float32Array) {\n  globalThis.Float32Array = Array;\n}\n\nif (!globalThis.Uint32Array) {\n  globalThis.Uint32Array = Array;\n}\n\nif (!globalThis.Uint16Array) {\n  globalThis.Uint16Array = Array;\n}\n\nif (!globalThis.Uint8Array) {\n  globalThis.Uint8Array = Array;\n}\n\nif (!globalThis.Int32Array) {\n  globalThis.Int32Array = Array;\n} //# sourceMappingURL=polyfill.js.map","map":null,"metadata":{},"sourceType":"module"}