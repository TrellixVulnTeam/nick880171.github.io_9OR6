{"ast":null,"code":"import * as PIXI from 'pixi.js';\nimport * as i0 from \"@angular/core\";\nexport let PhotoContainerComponent = /*#__PURE__*/(() => {\n  class PhotoContainerComponent {\n    constructor() {\n      this.backgroundcontainer = new PIXI.Container();\n      this.widthForFrame = 250;\n      this.heightForFrame = 300;\n      this.indexForOnePageScrolling = 0;\n      this.pagesForOnePageScrolling = [];\n    }\n\n    ngOnInit() {\n      this.loadImagesForBackgroundContainer();\n      this.mainContainerInit();\n      this.setupWindow();\n      this.setupMask();\n      this.setupContentForMask();\n      this.tickerForContent();\n    }\n\n    ngOnChanges() {}\n\n    ngAfterViewInit() {// this.video();\n    }\n\n    wheelScroll($event) {\n      // $event.deltaY > 0: scroll down\n      if ($event.deltaY > 0) {\n        if (this.indexForOnePageScrolling < this.pagesForOnePageScrolling.length - 1) {\n          this.indexForOnePageScrolling++;\n        }\n      } else {\n        if (this.indexForOnePageScrolling > 0) {\n          this.indexForOnePageScrolling--;\n        }\n      }\n\n      this.pagesForOnePageScrolling[this.indexForOnePageScrolling].width = window.outerWidth;\n      this.backgroundcontainer.addChild(this.pagesForOnePageScrolling[this.indexForOnePageScrolling]);\n    }\n\n    mainContainerInit() {\n      this.containerForPIXI = document.getElementById('containerForPIXI');\n\n      if (this.containerForPIXI) {\n        this.app = new PIXI.Application({\n          width: this.containerForPIXI.getBoundingClientRect().width,\n          height: window.innerHeight\n        });\n        this.containerForPIXI.appendChild(this.app.view);\n        this.pagesForOnePageScrolling[this.indexForOnePageScrolling].width = window.outerWidth;\n        this.backgroundcontainer.addChild(this.pagesForOnePageScrolling[this.indexForOnePageScrolling]);\n        this.app.stage.addChild(this.backgroundcontainer);\n      }\n    }\n\n    loadImagesForBackgroundContainer() {\n      const b1 = PIXI.Sprite.from('../../../assets/1.jpeg');\n      this.pagesForOnePageScrolling.push(b1);\n      const b2 = PIXI.Sprite.from('../../../assets/2.jpeg');\n      this.pagesForOnePageScrolling.push(b2);\n    }\n\n    video() {\n      // const containerForProfile = new PIXI.Container();\n      const profileFrame = PIXI.Sprite.from('../../../assets/profile.mp4');\n      profileFrame.scale.set(0.1);\n      profileFrame.position.set(10, 10);\n      this.frame.addChild(profileFrame);\n    }\n\n    setupWindow() {\n      // Create window frame\n      this.frame = new PIXI.Graphics(); // this.frame.beginFill(0x666666);\n\n      this.frame.lineStyle({\n        color: 0xffffff,\n        width: 4,\n        alignment: 0\n      });\n      this.frame.drawRect(0, 0, this.widthForFrame, this.heightForFrame);\n      this.frame.position.set(100, 60);\n      this.app.stage.addChild(this.frame);\n    }\n\n    setupMask() {\n      // Create a graphics object to define our mask\n      this.mask = new PIXI.Graphics(); // Add the rectangular area to show\n\n      this.mask.beginFill(0x000000);\n      this.mask.drawRect(0, 0, this.widthForFrame - 8, this.heightForFrame - 20);\n      this.mask.endFill();\n    }\n\n    setupContentForMask() {\n      // Add container that will hold our masked content\n      const maskContainer = new PIXI.Container(); // Set the mask to use our graphics object from above\n\n      maskContainer.mask = this.mask;\n      maskContainer.filters = [new PIXI.filters.NoiseFilter(0.5)]; // Add the mask as a child, so that the mask is positioned relative to its parent\n\n      maskContainer.addChild(this.mask); // Offset by the window's frame width\n\n      maskContainer.position.set(4, 8); // And add the container to the window!\n\n      this.frame.addChild(maskContainer); // Create contents for the masked container\n\n      this.text = new PIXI.Text('Do not go gentle into that good night,\\n' + 'Old age should burn and rave at close of day;\\n' + 'Rage, rage against the dying of the light.', {\n        fontSize: 24,\n        fill: 0xffffff,\n        wordWrap: true,\n        wordWrapWidth: this.widthForFrame - 8\n      });\n      this.text.x = 10;\n      maskContainer.addChild(this.text);\n    }\n\n    tickerForContent() {\n      // Add a ticker callback to scroll the text up and down\n      let elapsed = 0.0;\n      this.app.ticker.add(delta => {\n        elapsed += delta;\n        this.text.y = 0;\n        this.text.y += Math.cos(elapsed / 80.0) * 30.0;\n      });\n    }\n\n  }\n\n  PhotoContainerComponent.ɵfac = function PhotoContainerComponent_Factory(t) {\n    return new (t || PhotoContainerComponent)();\n  };\n\n  PhotoContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PhotoContainerComponent,\n    selectors: [[\"app-photo-container\"]],\n    hostBindings: function PhotoContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"wheel\", function PhotoContainerComponent_wheel_HostBindingHandler($event) {\n          return ctx.wheelScroll($event);\n        });\n      }\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 1,\n    consts: [[\"id\", \"containerForPIXI\", 1, \"containerForPIXI\"], [1, \"debug\"]],\n    template: function PhotoContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"p\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"index:\", ctx.indexForOnePageScrolling, \"\");\n      }\n    },\n    styles: [\".containerForPIXI[_ngcontent-%COMP%]{float:right;width:95vw;height:100vh}.debug[_ngcontent-%COMP%]{position:absolute;top:0;z-index:10}\"]\n  });\n  return PhotoContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}